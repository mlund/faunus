$schema: http://json-schema.org/schema#
properties:

    temperature: {type: number}

    mcloop:
        type: object
        properties:
            macro: {type: integer}
            micro: {type: integer}
        required: [macro, micro]
        additionalProperties: false

    random:
        type: object
        properties:
            seed:
                anyOf:
                    - {type: string, enum: [fixed, hardware]}
                    - {type: array, items: {type: integer}}
        required: [seed]
        additionalProperties: false

    geometry:
        type: object
        properties:
            type:
                type: string
                enum: [cuboid, slit, sphere, cylinder, hexagonal]
            radius: {type: number}
            length:
                anyOf:
                    - {type: number}
                    - {type: array, items: {type: number}, minItems: 3, maxItems: 3}
        required: [type]
        additionalProperties: false
        allOf:
            - if:
                  properties: {type: {const: "cuboid"}}
              then:
                  required: [length]
            - if:
                  properties: {type: {const: "slit"}}
              then:
                  required: [length]
            - if:
                  properties: {type: {const: "sphere"}}
              then:
                  required: [radius]
            - if:
                  properties: {type: {const: "cylinder"}}
              then:
                  required: [radius, length]
            - if:
                  properties: {type: {const: "hexagonal"}}
              then:
                  required: [radius, length]

    atomlist:
        type: array
        items:
            type: object
            additionalProperties:
                type: object
                additionalProperties: false
                properties:
                    activity: {type: number, default: 0.0}
                    alphax: {type: number, default: 0.0}
                    dp: {type: number, default: 0.0}
                    dprot: {type: number, default: 0.0, description: "Rotational displacement parameter"}
                    eps: {type: number, default: 0.0}
                    implicit: {type: boolean, default: false, description: "True if atom is implicit"}
                    mu:
                        items: {type: number}
                        type: array
                        minItems: 3
                        maxItems: 3
                    mulen: {type: number}
                    mw: {type: number, default: 1.0}
                    pactivity: {type: number, default: 0.0}
                    q: {type: number, default: 0.0, description: "Valency (e)"}
                    r: {type: number, default: 0.0}
                    sigma: {type: number, default: 0.0, description: "Diameter (Ã…)"}
                    tension: {type: number, default: 0.0}
                    tfe: {type: number, default: 0.0}

    moleculelist:
        type: array
        items:
            type: object
            additionalProperties:
                type: object
                additionalProperties: false
                properties:
                    activity: {type: number, default: 0.0}
                    atomic: {type: boolean, default: false}
                    atoms: {items: {type: string}, type: array}
                    bondlist: {items: {type: object}, type: array}
                    compressible: {type: boolean}
                    ensphere: {type: boolean}
                    excluded_neighbours: {type: integer}
                    exclusionlist:
                        type: array
                        items: {type: array, items: integer, minItems: 2, maxItems: 2}
                    insdir:
                        items: {type: number}
                        type: array
                        minItems: 3
                        maxItems: 3
                    insoffset:
                        items: {type: number}
                        type: array
                        minItems: 3
                        maxItems: 3
                    keeppos: {type: boolean}
                    keepcharges: {type: boolean}
                    rigid: {type: boolean}
                    rotate: {type: boolean}
                    structure:
                        anyOf:
                            - type: string
                              pattern: "(.*?)\\.(pqr|aam|xyz)$"
                            - type: array
                              items: {type: object}
                            - type: object
                              properties:
                                  fasta: {type: string}
                                  k: {type: number}
                                  req: {type: number}
                              additionalProperties: false
                    traj:
                        type: string
                        pattern: "(.*?)\\.(pqr)$"
                    trajcenter: {type: boolean}
                    trajweight: {type: string}

    energy:
        type: array
        items:
            type: object
            properties:
                confine:
                    description: "Geometrical confinement"
                    type: object
                    properties:
                        com: {type: boolean}
                        high:
                            items: {type: number}
                            type: array
                        low:
                            items: {type: number}
                            type: array
                        k: {type: [integer, string]}
                        molecules:
                            items: {type: string}
                            type: array
                        origo:
                            items: {type: number}
                            type: array
                            minItems: 3
                            maxItems: 3
                        radius: {type: number}
                        scale: {type: boolean}
                        type: {type: string, enum: [sphere, cylinder, cuboid]}
                    required: [k, molecules, type]
                    additionalProperties: false
                    allOf:
                        - if:
                              properties: {type: {const: "sphere"}}
                          then:
                              required: [radius]
                        - if:
                              properties: {type: {const: "cylinder"}}
                          then:
                              required: [radius]
                        - if:
                              properties: {type: {const: "cuboid"}}
                          then:
                              required: [high, low]

    moves:
        type: array
        items:
            type: object
            properties:
                moltransrot:
                    description: "Molecular translation and rotation"
                    properties:
                        dp: {type: number}
                        dprot: {type: number}
                        molecule: {type: string}
                        repeat: {type: [integer, string]}
                        dir:
                            items: {type: number}
                            type: array
                            minItems: 3
                            maxItems: 3
                        dirrot:
                            items: {type: number}
                            type: array
                            minItems: 3
                            maxItems: 3
                    required: [dp, dprot, molecule]
                    additionalProperties: false
                    type: object

                transrot:
                    description: "Atomic translation and rotation"
                    properties:
                        dp: {type: number}
                        dprot: {type: number}
                        molecule: {type: string}
                        repeat: {type: [integer, string]}
                        dir:
                            items: {type: number}
                            type: array
                            minItems: 3
                            maxItems: 3
                        dirrot:
                            items: {type: number}
                            type: array
                            minItems: 3
                            maxItems: 3
                    required: [molecule]
                    additionalProperties: false
                    type: object

                volume:
                    properties:
                        dV: {type: number}
                        method:
                            type: string
                            enum: [xy, isotropic, isochoric]
                        repeat: {type: integer}
                    required: [dV]
                    additionalProperties: false
                    type: object

                crankshaft:
                    properties:
                        dprot: {type: number}
                        molecule: {type: string}
                        joint_max: {type: integer}
                        repeat: {type: integer}
                    required: [dprot, molecule]
                    additionalProperties: false
                    type: object

                cluster:
                    properties:
                        dir:
                            items: {type: number}
                            type: array
                            minItems: 3
                            maxItems: 3
                        dirrot:
                            items: {type: number}
                            type: array
                            minItems: 3
                            maxItems: 3
                        dp: {type: number}
                        dprot: {type: number}
                        molecules:
                            items: {type: string}
                            type: array
                        satellites:
                            items: {type: string}
                            type: array
                        spread: {type: boolean}
                        threshold: {type: number}
                        repeat: {type: integer}
                    required: [dp, dprot, molecules, threshold]
                    additionalProperties: false
                    type: object
         
                pivot:
                    properties:
                        dprot: {type: [number]}
                        molecule: {type: string}
                        skiplarge: {type: boolean}
                        repeat: {type: [integer, string]}
                    required: [dprot, molecule]
                    additionalProperties: false
                    type: object

                rcmc:
                    properties:
                        repeat: {type: integer}
                    additionalProperties: false
                    type: object
         
    analysis:
        type: array
        items:
            type: object
            properties:

                atomrdf:
                    description: "Atom-atom radial distribution function"
                    properties:
                        dr: {type: number, description: "Binning resolution along r (Ã…)"}
                        file: {type: string, description: "Output file"}
                        name1: {type: string}
                        name2: {type: string}
                        dim: {type: integer, minimum: 1, maximum: 3, default: 3}
                        nstep: {type: integer}
                        nskip: {type: integer, default: 0}
                    required: [dr, file, name1, name2, nstep]
                    additionalProperties: false
                    type: object

                density:
                    properties:
                        nstep: {type: integer}
                        nskip: {type: integer, default: 0}
                        required: [nstep]
                        additionalProperties: false
                        type: object

                polymershape:
                    properties:
                        molecules:
                            items: {type: string}
                            type: array
                        nstep: {type: integer}
                    required: [molecules, nstep]
                    type: object

                sanity:
                    properties:
                        nstep: {type: integer}
                        nskip: {type: integer, default: 0}
                    required: [nstep]
                    additionalProperties: false
                    type: object

                savestate:
                    description: "Save particle positions to file"
                    properties:
                        file: {type: string, pattern: "(.*?)\\.(aam|pqr|state|ubj|gro|xyz|json)$"}
                    required: [file]
                    additionalProperties: false
                    type: object

                sliceddensity:
                    properties:
                        atoms:
                            items: {type: string}
                            type: array
                        dz: {type: number, default: 0.1}
                        file: {type: string}
                        nstep: {type: integer}
                        nskip: {type: integer, default: 0}
                        atomcom: {type: string}
                    required: [atoms, file, nstep]
                    additionalProperties: false
                    type: object

                systemenergy:
                    properties:
                        file: {type: string}
                        nstep: {type: integer}
                        nskip: {type: integer, default: 0}
                    required: [file, nstep]
                    additionalProperties: false
                    type: object

                xtcfile:
                    description: "Write Gromacs XTC trajectory"
                    properties:
                        file: {type: string}
                        nstep: {type: integer}
                        nskip: {type: integer, default: 0}
                        molecules:
                            items: {type: string}
                            type: array
                    required: [file, nstep]
                    additionalProperties: false
                    type: object
                    # yason.py cluster.yml | jq .analysis | genson | yason.py

