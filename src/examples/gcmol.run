#!/bin/bash

# THIS RUN SCRIPT IS USED AS A UNIT TEST SO PLEASE
# DO NOT UPLOAD ANY MODIFIED VERSIONS TO SVN UNLESS
# TO UPDATE THE TEST.

source_tests_dir="`dirname $0`"
cp -f $source_tests_dir/gcmol.test . 2> /dev/null

#-----------------------------------------------------------
# Create input file with atom properties
#-----------------------------------------------------------
echo '{
  // dp = Displacement parameter [angstrom]
  // q  = Valency/charge number [e]
  // r  = Radius [angstrom]
  "atomlist" : {
    "Na" : { "q": 1.0, "activity":0.005, "r":2.0, "dp":110 },  // sodium ion
    "Cl" : { "q":-1.0, "activity":0.005, "r":2.0, "dp":110 },  // chloride ion
    "Mg" : { "q": 2.0, "activity":0.005, "r":2.0, "dp":110 }, 
    "MM" : { "q": 1.0, "r":3.0, "dp":10 }    // monomer
  }
}' > gcmol.json

#-----------------------------------------------------------
# Create user input file
#-----------------------------------------------------------
echo "atomlist               gcmol.json
topology               gcmol.topo           # topology of simulation
loop_macrosteps        10
loop_microsteps        10000
cuboid_len             200     # Box side length Angstrom
sphere_radius          100
temperature            298     # Kelvin
epsilon_r              78.7    # Water dielectric const
lj_eps                 0.05    # kT
npt_P                  113.2   # mM
npt_dV                 2       # log(dV)
polymer_N              2
polymer_file           gcmol.aam
polymer_eqdist         0
polymer_forceconst     0.0557  # kT/A^2
polymer2_N              2
polymer2_file           gcmol.aam
polymer2_eqdist         0
polymer2_forceconst     0.0557  # kT/A^2
crank_dp               6.3
crank_minlen           2
crank_maxlen           10
pivot_dp               6.3
pivot_minlen           1
pivot_maxlen           1000
transrot_transdp       50
transrot_rotdp         6
tion1                  Cl	# deprecated, should be done in topo
nion1                  24	# cant specify one Ion type over different groups (what if group MG,Cl,Cl and Na,Cl ?)
qmin                   0.25
qmax                   4.0
dq                     0.01
test_stable            no
test_file              gcmol.test
" > gcmol.input

#-----------------------------------------------------------
# Make file with molecule of four atoms
#-----------------------------------------------------------
echo "4
 MM  0   0.00   0.00   0.00    1.0   1  3.0
 MM  1   7.60   0.00   0.00    1.0   1  3.0
 MM  2   0.00   7.60   0.00    1.0   1  3.0
 MM  3   7.60   7.60   0.00    1.0   1  3.0
" > gcmol.aam

#-----------------------------------------------------------
# Make file with topology
#-----------------------------------------------------------
echo '{
  "topology": {
    "salt": { "atoms": "Na,Cl", "init":"RANDOM"},
    "salt2": { "atoms": "Mg,Cl,Cl", "init":"RANDOM"},
    "chloride": { "atoms": "Cl,Cl,Cl,Cl", "init":"RANDOM"},
    "polymer": {"activity": 0.000000000000000005, "atoms": "MM,MM,MM,MM", "init": "POOL"},
    "polymer2": {"activity": 0.000000000000000005, "atoms": "MM,MM,MM,MM", "init": "POOL"}
  },
  "combinations": {
    "polymer": {"species": "polymer", "prob": 0.2},
    "polymer2": {"species": "polymer2", "prob": 0.2},
    "salt": {"species": "salt", "prob": 0.2},
    "salt2": {"species": "salt2", "prob": 0.2},
    "chloride": {"species": "chloride", "prob": 0.2},
    "2xsalt+salt2": {"species": "salt,salt,salt2", "prob": 0.2},
    "poly+4xCL": {"species": "polymer,chloride", "prob": 0.2},
    "poly+poly2": {"species": "polymer,polymer2", "prob": 0.2}
  }
}
' > gcmol.topo

#-----------------------------------------------------------
# Run simulation
#-----------------------------------------------------------
exe=./gcmol
if [ -x $exe ]; then
  $exe
  rc=$?
  rm -f confout.pqr
  exit $rc
fi
exit 1

